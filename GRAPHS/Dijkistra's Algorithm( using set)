
class Solution
{
	public:
	//Function to find the shortest distance of all the vertices
    //from the source vertex S.
    vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        set<pair<int,int>>s;
        s.insert({0,S});
        
        vector<int>dist(V,1e9);
        dist[S]=0;
        
        while(!s.empty()){
            auto it = *(s.begin());
            int dis = it.first;
            int node = it.second;
            s.erase(it);
            
            for(auto it:adj[node]){
                int adjnode = it[0];
                int edgeWeight = it[1];
                if(dis + edgeWeight < dist[adjnode])
                {
              ======// updation of method of min heap =======================================
              ||    if(dist[adjnode] != 1e9){                                               ||
              ||        s.erase({dist[adjnode],adjnode});                                   ||
              ||    }                                                                       ||
              ==============================================================================
                    
                    dist[adjnode] = dis + edgeWeight;
                    s.insert({dist[adjnode],adjnode});
                }
            }
            
        }
        
        return dist;
    }
};


